name: Build Game on Multiple Platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        cpp_compiler: [g++, clang++, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc
          - os: macos-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Setup SDL
      uses: libsdl-org/setup-sdl@v1
      with:
        version: 3-head
        version-sdl-image: 3-head
        version-sdl-mixer: 3-head
        version-sdl-ttf: 3-head

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

    - name: Copy Assets to Build Directory
      shell: bash
      run: |
        cp -r ${{ github.workspace }}/Assets ${{ steps.strings.outputs.build-output-dir }}/Assets

    - name: Create Zip Archive
      shell: bash
      run: |
        cd ${{ steps.strings.outputs.build-output-dir }}
        zip -r ${{ github.workspace }}/game-${{ matrix.os }}-${{ matrix.build_type }}.zip .
      # For Windows, we need to use a different command to zip
      # This is handled by using bash shell which works across platforms

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: game-${{ matrix.os }}-${{ matrix.build_type }}
        path: ${{ github.workspace }}/game-${{ matrix.os }}-${{ matrix.build_type }}.zip

# For FreeBSD and OpenBSD, we can use the `cross-platform-actions/action` to run commands on these platforms.
  build-freebsd:
    runs-on: ubuntu-latest
    name: Build on FreeBSD
    steps:
    - uses: cross-platform-actions/action@v0.12.0
      with:
        operating_system: freebsd
        run: |
          # Install necessary packages
          sudo pkg install -y cmake git zip
          git clone https://github.com/${{ github.repository }}.git
          cd ${{ github.event.repository.name }}
          mkdir build
          cd build
          cmake ..
          cmake --build .
          cp -r ../Assets .
          zip -r game-freebsd.zip .

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: game-freebsd
        path: ${{ github.workspace }}/game-freebsd.zip

  build-openbsd:
    runs-on: ubuntu-latest
    name: Build on OpenBSD
    steps:
    - uses: cross-platform-actions/action@v0.12.0
      with:
        operating_system: openbsd
        run: |
          # Install necessary packages
          doas pkg_add cmake git zip
          git clone https://github.com/${{ github.repository }}.git
          cd ${{ github.event.repository.name }}
          mkdir build
          cd build
          cmake ..
          cmake --build .
          cp -r ../Assets .
          zip -r game-openbsd.zip .

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: game-openbsd
        path: ${{ github.workspace }}/game-openbsd.zip
